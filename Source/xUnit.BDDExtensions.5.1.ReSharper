<Configuration>
  <SharedSolutionTemplateManager>
    <LiveTemplates>
      <Template uid="43319128-ae7a-4aaa-8678-8c1e26d76bc3" shortcut="scs" description="BDD style StaticContextSpecification" text="    [Concern(typeof ($ConcernType$))]&#xD;&#xA;    public class When_$ContextName$ : StaticContextSpecification&#xD;&#xA;    {&#xD;&#xA;        protected override void EstablishContext()&#xD;&#xA;        {&#xD;&#xA;            $END$&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        protected override void Because()&#xD;&#xA;        {&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        [Observation]&#xD;&#xA;        public void Should_$Observation$()&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;    }" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="TypeAndNamespace" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="ConcernType" expression="" initialRange="0" />
          <Variable name="ContextName" expression="" initialRange="0" />
          <Variable name="Observation" expression="" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
      <Template uid="b24ed7e6-b233-4506-82ec-cd4bb41c2777" shortcut="ob" description="BDD Observation" text="        [Observation]&#xD;&#xA;        public void Should_$next_observation$()&#xD;&#xA;        {&#xD;&#xA;            $END$&#xD;&#xA;        }" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="TypeMember" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="next_observation" expression="" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
      <Template uid="c2dbcfb2-d973-4b3a-8f17-71eb0c6ebbcb" shortcut="ics" description="BDD style InstanceContextSpecification" text="    [Concern(typeof($ConcernType$))]&#xD;&#xA;    public class When_$ContextName$ : InstanceContextSpecification&lt;$ConcernType$&gt;&#xD;&#xA;    {&#xD;&#xA;        protected override void EstablishContext()&#xD;&#xA;        {&#xD;&#xA;            $END$&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        protected override void Because()&#xD;&#xA;        {&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        [Observation]&#xD;&#xA;        public void Should_$Observation$()&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;    }" reformat="True" shortenQualifiedReferences="True">
        <Context>
          <CSharpContext context="TypeAndNamespace" minimumLanguageVersion="2.0" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="ConcernType" expression="" initialRange="0" />
          <Variable name="ContextName" expression="" initialRange="0" />
          <Variable name="Observation" expression="" initialRange="0" />
        </Variables>
        <CustomProperties />
      </Template>
    </LiveTemplates>
  </SharedSolutionTemplateManager>
  <CodeStyleSettings>
    <ExternalPath IsNull="False">
    </ExternalPath>
    <Sharing>SOLUTION</Sharing>
    <CSharp>
      <FormatSettings>
        <MODIFIERS_ORDER IsNull="False">
          <Item>public</Item>
          <Item>protected</Item>
          <Item>internal</Item>
          <Item>private</Item>
          <Item>new</Item>
          <Item>abstract</Item>
          <Item>virtual</Item>
          <Item>override</Item>
          <Item>sealed</Item>
          <Item>static</Item>
          <Item>readonly</Item>
          <Item>extern</Item>
          <Item>unsafe</Item>
          <Item>volatile</Item>
        </MODIFIERS_ORDER>
      </FormatSettings>
      <UsingsSettings />
      <Naming2>
        <EventHandlerPatternLong>$object$_On$event$</EventHandlerPatternLong>
        <EventHandlerPatternShort>$event$Handler</EventHandlerPatternShort>
      </Naming2>
    </CSharp>
    <VB>
      <FormatSettings />
      <ImportsSettings />
      <Naming2>
        <EventHandlerPatternLong>$object$_On$event$</EventHandlerPatternLong>
        <EventHandlerPatternShort>$event$Handler</EventHandlerPatternShort>
      </Naming2>
    </VB>
    <Web>
      <Naming2 />
    </Web>
    <Xaml>
      <Naming2 />
    </Xaml>
    <XML>
      <FormatSettings />
    </XML>
    <GenerateMemberBody />
    <Naming2>
      <EventHandlerPatternLong>$object$_On$event$</EventHandlerPatternLong>
      <EventHandlerPatternShort>$event$Handler</EventHandlerPatternShort>
      <PredefinedRule Inspect="True" Prefix="_" Suffix="" Style="aaBb" ElementKind="PrivateInstanceFields" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="TypesAndNamespaces" />
      <PredefinedRule Inspect="True" Prefix="I" Suffix="" Style="AaBb" ElementKind="Interfaces" />
      <PredefinedRule Inspect="True" Prefix="T" Suffix="" Style="AaBb" ElementKind="TypeParameters" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="MethodPropertyEvent" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Locals" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="LocalConstants" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="aaBb" ElementKind="Parameters" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="PublicFields" />
      <PredefinedRule Inspect="True" Prefix="_" Suffix="" Style="aaBb" ElementKind="PrivateStaticFields" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="Constants" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="PrivateConstants" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="StaticReadonly" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="PrivateStaticReadonly" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="EnumMember" />
      <PredefinedRule Inspect="True" Prefix="" Suffix="" Style="AaBb" ElementKind="Other" />
      <UserRule Inspect="True" Prefix="" Suffix="" Style="Aa_bb" StaticnessKind="Static, Instance" AccessRight="Public" Description="BDD Style">
        <ElementKinds>
          <Kind Name="xunit.bddextension.observation" />
          <Kind Name="xunit.bddextension.concern" />
        </ElementKinds>
      </UserRule>
    </Naming2>
  </CodeStyleSettings>
</Configuration>